<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--导入jdbc配置文件-->
    <context:property-placeholder location="classpath:conf/jdbc.properties"/>

    <!--声明数据源 连接数据库-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

    </bean>

    <!--创建SqlsessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:conf/mybatis.xml"/>
    </bean>

    <!--声明mybatis扫描器 MapperScannerConfigurer 创建dao对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--把创建好的SqlsessionFactory对象名放到这-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--把存放mybatis mapper文件的包名放在这 这样就会创建出dao对象了 就可以访问数据库了-->
        <property name="basePackage" value="com.y.dao"/>
    </bean>

    <!--声明@Service注解所在的包名位置-->
    <context:component-scan base-package="com.y.service"/>
    <!--事务配置-->

</beans>